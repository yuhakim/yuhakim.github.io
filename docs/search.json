[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yuha’s Web Sketchbook",
    "section": "",
    "text": "Hello, my name is Yuha from Y2 CNM! I’m from South Korea and this is my second year living in Singapore. I like playing the guitar, canoeing, and doodling in my notebook. Taking NM2207 is my first time learning to code. It’s been a challenge, but I feel proud when I see myself progressing!\n\nWeekly Content\n\nWeek 1\n\nChallenge\n\n\n\nWeek 2\n\nChallenge\n\n\n\nWeek 3\n\nCode-along\n\n\nChallenge\n\n\n\nWeek 4\n\nCode-along\n\n\nChallenge\n\n\n\nWeek 5\n\nCode-along\n\n\nChallenge\n\n\n\nWeek 6\n\nCode-along\n\n\nChallenge\n\n\n\nWeek 8\n\nChallenge\n\n\n\nWeek 9\n\nCode-along & Challenge\n\n\nFinal Project Diary Entry\n\n\n\nWeek 10\n\nFinal Project Diary Entry\n\n\n\nWeek 11\n\nFinal Project Diary Entry"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "write-up.html",
    "href": "write-up.html",
    "title": "write-up",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "write-up.html#running-code",
    "href": "write-up.html#running-code",
    "title": "write-up",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "visualizations.html",
    "href": "visualizations.html",
    "title": "Visualizations",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n\n\nsleep <- read_csv(\"sleep.csv\")\n\nRows: 374 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Gender, Occupation, BMI Category, Blood Pressure, Sleep Disorder\ndbl (8): Person ID, Age, Sleep Duration, Quality of Sleep, Physical Activity...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(sleep)\n\nRows: 374\nColumns: 13\n$ `Person ID`               <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1…\n$ Gender                    <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Mal…\n$ Age                       <dbl> 27, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, …\n$ Occupation                <chr> \"Software Engineer\", \"Doctor\", \"Doctor\", \"Sa…\n$ `Sleep Duration`          <dbl> 6.1, 6.2, 6.2, 5.9, 5.9, 5.9, 6.3, 7.8, 7.8,…\n$ `Quality of Sleep`        <dbl> 6, 6, 6, 4, 4, 4, 6, 7, 7, 7, 6, 7, 6, 6, 6,…\n$ `Physical Activity Level` <dbl> 42, 60, 60, 30, 30, 30, 40, 75, 75, 75, 30, …\n$ `Stress Level`            <dbl> 6, 8, 8, 8, 8, 8, 7, 6, 6, 6, 8, 6, 8, 8, 8,…\n$ `BMI Category`            <chr> \"Overweight\", \"Normal\", \"Normal\", \"Obese\", \"…\n$ `Blood Pressure`          <chr> \"126/83\", \"125/80\", \"125/80\", \"140/90\", \"140…\n$ `Heart Rate`              <dbl> 77, 75, 75, 85, 85, 85, 82, 70, 70, 70, 70, …\n$ `Daily Steps`             <dbl> 4200, 10000, 10000, 3000, 3000, 3000, 3500, …\n$ `Sleep Disorder`          <chr> \"None\", \"None\", \"None\", \"Sleep Apnea\", \"Slee…\n\n\n\nggplot(data = sleep, \n       mapping = aes(x = `Physical Activity Level`, y = `Sleep Duration`, colour = Occupation)) + geom_point()"
  }
]